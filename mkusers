#!/bin/sh
#********************************************************************************
# Create qmail users and groups                                                 *
#                                                                               *
#   Author: Kai Peter, Â©2013 (kp@dyndn.es)                                      *
#  Version: 0.42-beta                                                           *
#  Lisence: ISC                                                                 *
#                                                                               *
# Description: I don't remember how often I did create a script to create the   *
#              necessary users ...                                              *
#              This should work on most Linux and BSD systems.                  *
#********************************************************************************
showHelp() {
  echo "Usage: mkusers [-h|--help] [-u <UID>] [-g <GID>]"
  echo
  echo -e "  -h/--help\tPrint this help."
  echo -e "  -u <UID> \tDefine the UID which should be used for the first qmail"
  echo -e "           \tuser. UID has to be a valid numeric value (decimal). It"
  echo -e "           \twill be increased by 1 for each user."
  echo -e "  -g <GID> \tDefine the first GID - handled similar like UID but for"
  echo -e "           \tthe qmail groups."
  echo -e "  -v       \tPrint version and exit."
  echo
  exit 0
}
isError() { echo $ErrMsg ; exit ; }

while getopts ":hu:g:v" o; do
    case "${o}" in
        u) STARTUID=${OPTARG};;
        g) STARTGID=${OPTARG};;
        h|help) showHelp;;
        v) echo "mkusers 0.42-beta" ; exit 0
    esac
done ; shift $((OPTIND-1))

# have to be run as root
if [ `id -u` -ne 0 ] ; then echo "$0 have to be run as root!" ; exit 1 ; fi

#********************************************************************************
# search for the tool to create a group
PRG=$(which groupadd 2>/dev/null) || \
PRG=$(which addgroup 2>/dev/null) || \
PRG=$(which pw 2>/dev/null)
# FreeBSD's tool 'pw' is special: 'pw groupadd -g 200 -n qmail'
if [ "$PRG" ] && [ $PRG = "/usr/sbin/pw" ] ; then PRG="$PRG groupadd" ; N="-n" ; fi
# Error:
[ "$PRG" ] || ErrMsg="Didn't know how to add groups! Aborting!"
[ "$ErrMsg" ] && isError

# creating groups
if [ $STARTGID ] ; then GID="$STARTGID" ; PRG=$PRG" -g" ; fi
for G in `head -2 conf-groups`
do
  $PRG $GID $N $G 2>/dev/null && echo "Added group $G" || echo "Group $G exists already!"
  [ $GID ] && GID=$(($GID+1))    # increment the next GID
done

#********************************************************************************
# search for the tool to create users (usually 'adduser 'or 'useradd')
PRG=$(which useradd 2>/dev/null) || \
PRG=$(which adduser 2>/dev/null)
# On FreeBSD we need pw and the '-n <user>' switch ( the cmd  is a bit different:
# '$> pw useradd -g qmail -s /bin/nologin -c "" -d /var/qmail -u 200 -n <user>' )
# It prints several warnings also, so we add the '-q' switch to suppress them.
if [ `uname | tr '/:[A-Z]' '..[a-z]'` = "freebsd" ] ; then
   PRG=$(which pw 2>/dev/null)" useradd" ; N="-q -n" ; fi

# Error:
[ "$PRG" ] || ErrMsg="Didn't know how to create users! Aborting!"
[ "$ErrMsg" ] && isError

# users
HOME=`head -1 conf-qmail`
if [ $STARTUID ] ; then NEXTUID="$STARTUID" ; fi
for U in `head -8 conf-users`
do
  i=$(($i+1))  # increment the loop counter
  TID=`id -u $U 2>/dev/null`                        # get the UID temporarily
  if [ ! $TID ] ; then                              # exclude UID 0 (root)
    H="-d $HOME" ; GID=`head -1 conf-groups`
    if [ $i -eq 1 ] ; then H="-d $HOME/alias" ; fi  # first one is the alias user
    # switch the group (the first 4 users have 'qmail', than 'nofiles')
    if [ $i -ge 5 ] ; then GID=`head -2 conf-groups | tail -1` ; fi
    [ $NEXTUID ] && SETUID="-u $NEXTUID"            # set the next UID to use
    # Create the user
    $PRG -g $GID -s /sbin/nologin $SETUID -c "" $H $N $U && \
    echo "Added user $U with group $GID!"
  else
    # Don't report that the user with uid 0 exists
    if [ $TID != "0" ] ; then echo "User $U exists already!" ; fi
  fi
  # increment the NEXTUID if necessary
  [ "$TID" != "0" ] && [ $NEXTUID ] && NEXTUID=$(($NEXTUID+1))
done
